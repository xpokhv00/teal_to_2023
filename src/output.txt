.IFJcode21
DEFVAR GF@_
DEFVAR GF@cond1
DEFVAR GF@cond2
DEFVAR GF@swap1
DEFVAR GF@swap2
DEFVAR GF@a
DEFVAR GF@b
DEFVAR GF@c
DEFVAR GF@d
JUMP %start0
LABEL %ERR_RT_NIL
EXIT int@8
LABEL %ERR_RT_DIVZERO
EXIT int@9

################################# READS
LABEL reads
PUSHFRAME
DEFVAR LF@return
DEFVAR LF@readstr
READ LF@readstr string
MOVE LF@return LF@readstr
PUSHS LF@return
POPFRAME
RETURN

############################### READI
LABEL readi
PUSHFRAME
DEFVAR LF@return
DEFVAR LF@readstr
DEFVAR LF@rettype
READ LF@readstr int
TYPE LF@rettype LF@readstr
JUMPIFEQ %readiNil nil@nil LF@rettype
MOVE LF@return LF@readstr
PUSHS LF@return
JUMP %end_readi

LABEL %readiNil
MOVE LF@return nil@nil
PUSHS LF@return
LABEL %end_readi
POPFRAME
RETURN

############################### READN
LABEL readn
PUSHFRAME
DEFVAR LF@return
DEFVAR LF@readstr
DEFVAR LF@rettype
READ LF@readstr float
TYPE LF@rettype LF@readstr
JUMPIFEQ %readnNil nil@nil LF@rettype
MOVE LF@return LF@readstr
PUSHS LF@return
JUMP %end_readn

LABEL %readnNil
MOVE LF@return nil@nil
PUSHS LF@return
LABEL %end_readn
POPFRAME
RETURN

############################### TOINTEGER
LABEL tointeger
PUSHFRAME
DEFVAR LF@return
DEFVAR LF@rettype
TYPE LF@rettype LF@%param0
JUMPIFEQ %tointegernil nil@nil LF@rettype
FLOAT2INT LF@return LF@%param0
PUSHS LF@return
JUMP %end_tointeger

LABEL %tointegernil
MOVE LF@return nil@nil
PUSHS LF@return
LABEL %end_tointeger
POPFRAME
RETURN

############################### SUBSTR
LABEL substr
PUSHFRAME
DEFVAR LF@areParamsCorrect
DEFVAR LF@strlen
DEFVAR LF@return

JUMPIFEQ %ERR_RT_NIL LF@%param0 nil@nil
JUMPIFEQ %ERR_RT_NIL LF@%param1 nil@nil
JUMPIFEQ %ERR_RT_NIL LF@%param2 nil@nil

STRLEN LF@strlen LF@%param0

LT LF@areParamsCorrect LF@%param1 int@1
JUMPIFEQ %substrempty LF@areParamsCorrect bool@true

GT LF@areParamsCorrect LF@%param2 LF@strlen
JUMPIFEQ %substrempty LF@areParamsCorrect bool@true

LT LF@areParamsCorrect LF@%param2 LF@%param1
JUMPIFEQ %substrempty LF@areParamsCorrect bool@true

# if we got here, everything is correct
DEFVAR LF@character
SUB LF@%param1 LF@%param1 int@1
SUB LF@%param2 LF@%param2 int@1
MOVE LF@return string@

# while (i<j) {i++;}
DEFVAR LF@condition
LABEL %substr_while_start
GT LF@condition LF@%param1 LF@%param2
JUMPIFEQ %substr_while_end LF@condition bool@true
GETCHAR LF@character LF@%param0 LF@%param1
CONCAT LF@return LF@return LF@character
ADD LF@%param1 LF@%param1 int@1
JUMP %substr_while_start

LABEL %substr_while_end
PUSHS LF@return
JUMP %end_substr

LABEL %substrempty
MOVE LF@return string@
PUSHS LF@return
LABEL %end_substr
POPFRAME
RETURN

############################### ORD
LABEL ord
PUSHFRAME
DEFVAR LF@return
DEFVAR LF@check
DEFVAR LF@strlen
JUMPIFEQ %ordfail LF@%param0 nil@nil
JUMPIFEQ %ordfail LF@%param1 nil@nil
STRLEN LF@strlen LF@%param0
GT LF@check LF@%param1 LF@strlen
JUMPIFEQ %ordnil LF@check bool@true
STRI2INT LF@return LF@%param0 LF@%param1
PUSHS LF@return
JUMP %end_ord

LABEL %ordnil
MOVE LF@return nil@nil
PUSHS LF@return
LABEL %end_ord
POPFRAME
RETURN

LABEL %ordfail
EXIT int@8

############################### CHR
LABEL chr
PUSHFRAME
DEFVAR LF@return
DEFVAR LF@tmp
LT LF@tmp LF@%param0 int@0
JUMPIFEQ %chrdnil LF@tmp bool@true
GT LF@tmp LF@%param0 int@255
JUMPIFEQ %chrdnil LF@tmp bool@true
JUMPIFEQ %ERR_RT_NIL LF@%param0 nil@nil
INT2CHAR LF@return LF@%param0
PUSHS LF@return
JUMP %end_chr

LABEL %chrnil
MOVE LF@return nil@nil
PUSHS LF@return
LABEL %end_chr
POPFRAME
RETURN
LABEL main
PUSHFRAME
PUSHS int@1
DEFVAR LF@$9
POPS LF@$9
PUSHS int@0
DEFVAR LF@$10
POPS LF@$10
PUSHS LF@$9
PUSHS LF@$10
POPS GF@a
POPS GF@c
TYPE GF@b GF@a
JUMPIFEQ %ERR_RT_NIL GF@b string@nil
TYPE GF@b GF@c
JUMPIFEQ %ERR_RT_NIL GF@b string@nil
PUSHS GF@c
PUSHS GF@a
POPS GF@a
TYPE GF@b GF@a
JUMPIFEQ %0 GF@b string@float
JUMPIFEQ %ERR_RT_DIVZERO GF@a int@0
JUMP %1
LABEL %0
JUMPIFEQ %ERR_RT_DIVZERO GF@a float@0x0p+0
LABEL %1
PUSHS GF@a
DIVS
POPS LF@$9
MOVE  GF@a LF@$9
TYPE GF@b GF@a
JUMPIFEQ %2 GF@b string@nil
WRITE GF@a
JUMP %3
LABEL %2
WRITE string@nil
LABEL %3
LABEL %end_of_fn_main
POPFRAME
RETURN
LABEL %start0
CREATEFRAME
CALL main
JUMP %start1
LABEL %start1
